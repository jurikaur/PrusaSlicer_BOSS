on:
    workflow_call:
      inputs:
        cache-key:
          required: true
          type: string
        cache-path:
          required: true
          type: string
        os:
          required: true
          type: string
        arch:
          required: false
          type: string

jobs:
  build_prusa:
    name: Build PrusaSlicer
    runs-on: ${{ inputs.os }}
    env:
      date:
      ver:

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: load cached deps
        uses: actions/cache@v4
        with:
          path: ${{ inputs.cache-path }}
          key: ${{ inputs.cache-key }}
          fail-on-cache-miss: true

      - name: Get the version and date on Ubuntu and macOS
        if: inputs.os != 'windows-latest'
        run: |
          ver_pure=$(grep 'set(SLIC3R_VERSION' version.inc | cut -d '"' -f2)
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            ver="PR-${{ github.event.number }}"
          else
            ver="$ver_pure+BOSS"
          fi
          echo "ver=$ver" >> $GITHUB_ENV
          echo "ver_pure=$ver_pure" >> $GITHUB_ENV
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        shell: bash

      - name: Get the version and date on Windows
        if: inputs.os == 'windows-latest'
        run: |
          $date = Get-Date -Format 'yyyyMMdd'
          $ref = "${{ github.ref }}"
          $eventName = "${{ github.event_name }}"
          $prNumber = "${{ github.event.number }}"
          $versionContent = Get-Content version.inc -Raw
          if ($versionContent -match 'set\(SLIC3R_VERSION "(.*?)"\)') {
              $ver_pure = $matches[1]
          }
          if ($eventName -eq 'pull_request') {
              $ver = "PR" + $prNumber
          } else {
              $ver=$ver_pure + "+BOSS"
          }

          echo "ver=$ver" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
          echo "ver_pure=$ver_pure" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
          echo "date=$date" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
          echo "date: ${{ env.date }} version: ${{ env.ver }}"
        shell: pwsh

#   Mac
      - name: Install tools mac
        if: inputs.os == 'macos-12' || inputs.os == 'macos-13' || inputs.os == 'macos-14'
        run: |
          brew install git gettext automake texinfo tree
          brew uninstall cmake
          (cd $(brew --repository homebrew/core)/Formula/c; git checkout e26e881a5dc87daaab3c96096288e67f055bb7d6 cmake.rb)
          HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_FROM_API=1 brew install cmake
          brew list
          mkdir -p ${{ github.workspace }}/deps/build_${{inputs.arch}}
          mkdir -p ${{ github.workspace }}/deps/build_${{inputs.arch}}/PrusaSlicer_dep_${{inputs.arch}}
          tree ${{ github.workspace }}/deps/build_${{inputs.arch}}/PrusaSlicer_dep_${{inputs.arch}}

      - name: Build slicer mac
        if: inputs.os == 'macos-12' || inputs.os == 'macos-13' || inputs.os == 'macos-14'
        working-directory: ${{ github.workspace }}
        run: |
          ./build_release_macos.sh -s -n -a ${{inputs.arch}} -t 10.15

      - name: Create DMG without notary
        # if: github.ref != 'refs/heads/boss' && (inputs.os == 'macos-12' || inputs.os == 'macos-13' || inputs.os == 'macos-14')
        if: inputs.os == 'macos-12' || inputs.os == 'macos-13' || inputs.os == 'macos-14'
        working-directory: ${{ github.workspace }}
        run: |
          ln -s /Applications ${{ github.workspace }}/build_${{inputs.arch}}/PrusaSlicer/Applications
          hdiutil create -volname "PrusaSlicer" -srcfolder ${{ github.workspace }}/build_${{inputs.arch}}/PrusaSlicer -ov -format UDZO PrusaSlicer-${{ env.ver }}+MacOS-${{inputs.arch}}-${{ env.date }}.dmg

      - name: Upload artifacts mac
        if: inputs.os == 'macos-12' || inputs.os == 'macos-13' || inputs.os == 'macos-14'
        uses: actions/upload-artifact@v4
        with:
          name: PrusaSlicer-${{ env.ver }}+MacOS-${{inputs.arch}}-${{ env.date }}
          path: ${{ github.workspace }}/PrusaSlicer-${{ env.ver }}+MacOS-${{inputs.arch}}-${{ env.date }}.dmg

# Windows
      - name: setup MSVC
        if: inputs.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v2

      - name: Build slicer Win
        if: inputs.os == 'windows-latest'
        working-directory: ${{ github.workspace }}
        run: .\build_win.bat -d=.\deps\build\PrusaSlicer_dep -c=Release -s=app -r=none

      - name: Pack app
        if: inputs.os == 'windows-latest'
        working-directory: ${{ github.workspace }}/build/src/Release
        run: |
          7z a -tzip ${{ github.workspace }}\build\PrusaSlicer-${{ env.ver }}+win64-${{ env.date }}.zip resources *.exe *.dll

      - name: Upload artifacts Win zip
        if: inputs.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: PrusaSlicer-${{ env.ver }}+win64-${{ env.date }}
          path: ${{ github.workspace }}\build\PrusaSlicer-${{ env.ver }}+win64-${{ env.date }}.zip
